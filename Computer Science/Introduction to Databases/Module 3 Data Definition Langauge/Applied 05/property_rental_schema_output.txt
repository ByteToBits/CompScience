SQL> SET DEFINE OFF;
SQL> 
SQL> --student id: 30428831
SQL> --student name: Tristan Sim
SQL> 
SQL> -- Generated by Oracle SQL Developer Data Modeler 24.3.1.351.0831
SQL> --   at:        2025-03-16 17:14:37 MYT
SQL> --   site:      Oracle Database 12c
SQL> --   type:      Oracle Database 12c
SQL> 
SQL> 
SQL> 
SQL> DROP TABLE DAMAGE CASCADE CONSTRAINTS 
  2  ;

Error starting at line : 22 in command -
DROP TABLE DAMAGE CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist

https://docs.oracle.com/error-help/db/ora-00942/00942. 00000 -  "table or view%s does not exist"
*Cause:    The specified table or view did not exist, or a synonym
           pointed to a table or view that did not exist.
           To find existing user tables and views, query the
           ALL_TABLES and ALL_VIEWS data dictionary views. Certain
           privileges may be required to access the table. If an
           application returned this message, then the table that the
           application tried to access did not exist in the database, or
           the application did not have access to it.
*Action:   Check each of the following
           - The spelling of the table or view name is correct.
           - The referenced table or view name does exist.
           - The synonym points to an existing table or view.
SQL> 
SQL> DROP TABLE MAINTENANCE CASCADE CONSTRAINTS 
  2  ;

Error starting at line : 25 in command -
DROP TABLE MAINTENANCE CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist

https://docs.oracle.com/error-help/db/ora-00942/00942. 00000 -  "table or view%s does not exist"
*Cause:    The specified table or view did not exist, or a synonym
           pointed to a table or view that did not exist.
           To find existing user tables and views, query the
           ALL_TABLES and ALL_VIEWS data dictionary views. Certain
           privileges may be required to access the table. If an
           application returned this message, then the table that the
           application tried to access did not exist in the database, or
           the application did not have access to it.
*Action:   Check each of the following
           - The spelling of the table or view name is correct.
           - The referenced table or view name does exist.
           - The synonym points to an existing table or view.
SQL> 
SQL> DROP TABLE OWNER CASCADE CONSTRAINTS 
  2  ;

Error starting at line : 28 in command -
DROP TABLE OWNER CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist

https://docs.oracle.com/error-help/db/ora-00942/00942. 00000 -  "table or view%s does not exist"
*Cause:    The specified table or view did not exist, or a synonym
           pointed to a table or view that did not exist.
           To find existing user tables and views, query the
           ALL_TABLES and ALL_VIEWS data dictionary views. Certain
           privileges may be required to access the table. If an
           application returned this message, then the table that the
           application tried to access did not exist in the database, or
           the application did not have access to it.
*Action:   Check each of the following
           - The spelling of the table or view name is correct.
           - The referenced table or view name does exist.
           - The synonym points to an existing table or view.
SQL> 
SQL> DROP TABLE PAYMENT CASCADE CONSTRAINTS 
  2  ;

Error starting at line : 31 in command -
DROP TABLE PAYMENT CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist

https://docs.oracle.com/error-help/db/ora-00942/00942. 00000 -  "table or view%s does not exist"
*Cause:    The specified table or view did not exist, or a synonym
           pointed to a table or view that did not exist.
           To find existing user tables and views, query the
           ALL_TABLES and ALL_VIEWS data dictionary views. Certain
           privileges may be required to access the table. If an
           application returned this message, then the table that the
           application tried to access did not exist in the database, or
           the application did not have access to it.
*Action:   Check each of the following
           - The spelling of the table or view name is correct.
           - The referenced table or view name does exist.
           - The synonym points to an existing table or view.
SQL> 
SQL> DROP TABLE PAYMETHOD CASCADE CONSTRAINTS 
  2  ;

Error starting at line : 34 in command -
DROP TABLE PAYMETHOD CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist

https://docs.oracle.com/error-help/db/ora-00942/00942. 00000 -  "table or view%s does not exist"
*Cause:    The specified table or view did not exist, or a synonym
           pointed to a table or view that did not exist.
           To find existing user tables and views, query the
           ALL_TABLES and ALL_VIEWS data dictionary views. Certain
           privileges may be required to access the table. If an
           application returned this message, then the table that the
           application tried to access did not exist in the database, or
           the application did not have access to it.
*Action:   Check each of the following
           - The spelling of the table or view name is correct.
           - The referenced table or view name does exist.
           - The synonym points to an existing table or view.
SQL> 
SQL> DROP TABLE PROPERTY CASCADE CONSTRAINTS 
  2  ;

Error starting at line : 37 in command -
DROP TABLE PROPERTY CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist

https://docs.oracle.com/error-help/db/ora-00942/00942. 00000 -  "table or view%s does not exist"
*Cause:    The specified table or view did not exist, or a synonym
           pointed to a table or view that did not exist.
           To find existing user tables and views, query the
           ALL_TABLES and ALL_VIEWS data dictionary views. Certain
           privileges may be required to access the table. If an
           application returned this message, then the table that the
           application tried to access did not exist in the database, or
           the application did not have access to it.
*Action:   Check each of the following
           - The spelling of the table or view name is correct.
           - The referenced table or view name does exist.
           - The synonym points to an existing table or view.
SQL> 
SQL> DROP TABLE RENT CASCADE CONSTRAINTS 
  2  ;

Error starting at line : 40 in command -
DROP TABLE RENT CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist

https://docs.oracle.com/error-help/db/ora-00942/00942. 00000 -  "table or view%s does not exist"
*Cause:    The specified table or view did not exist, or a synonym
           pointed to a table or view that did not exist.
           To find existing user tables and views, query the
           ALL_TABLES and ALL_VIEWS data dictionary views. Certain
           privileges may be required to access the table. If an
           application returned this message, then the table that the
           application tried to access did not exist in the database, or
           the application did not have access to it.
*Action:   Check each of the following
           - The spelling of the table or view name is correct.
           - The referenced table or view name does exist.
           - The synonym points to an existing table or view.
SQL> 
SQL> DROP TABLE TENANT CASCADE CONSTRAINTS 
  2  ;

Error starting at line : 43 in command -
DROP TABLE TENANT CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist

https://docs.oracle.com/error-help/db/ora-00942/00942. 00000 -  "table or view%s does not exist"
*Cause:    The specified table or view did not exist, or a synonym
           pointed to a table or view that did not exist.
           To find existing user tables and views, query the
           ALL_TABLES and ALL_VIEWS data dictionary views. Certain
           privileges may be required to access the table. If an
           application returned this message, then the table that the
           application tried to access did not exist in the database, or
           the application did not have access to it.
*Action:   Check each of the following
           - The spelling of the table or view name is correct.
           - The referenced table or view name does exist.
           - The synonym points to an existing table or view.
SQL> 
SQL> -- predefined type, no DDL - MDSYS.SDO_GEOMETRY
SQL> 
SQL> -- predefined type, no DDL - XMLTYPE
SQL> 
SQL> CREATE TABLE DAMAGE 
  2      ( 
  3       dam_no            NUMBER (8)  NOT NULL , 
  4       dam_datetime      DATE  NOT NULL , 
  5       rent_agreement_no NUMBER (8)  NOT NULL , 
  6       dam_type          VARCHAR2 (50)  NOT NULL , 
  7       dam_cost          NUMBER (8,2)  NOT NULL , 
  8       pay_no            NUMBER (8)  NOT NULL 
  9      ) 
 10  ;

Table DAMAGE created.

SQL> 
SQL> COMMENT ON COLUMN DAMAGE.dam_no IS 'Damage Number (Surrogate Key & Primary Key)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN DAMAGE.dam_datetime IS 'Damage Date Time (Since Oracle Supports a Special Data Time Variable)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN DAMAGE.rent_agreement_no IS 'Rental Agreement Number (Surrogate Key | Primary Key)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN DAMAGE.dam_type IS 'Damage Type' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN DAMAGE.dam_cost IS 'Damage Cost (AUD 3000.00)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN DAMAGE.pay_no IS 'Payment Number (Primary Key)' 
  2  ;

Comment created.

SQL> CREATE UNIQUE INDEX DAMAGE__IDX ON DAMAGE 
  2      ( 
  3       pay_no ASC 
  4      ) 
  5  ;

INDEX DAMAGE__IDX created.

SQL> 
SQL> ALTER TABLE DAMAGE 
  2      ADD CONSTRAINT DAMAGE_PK PRIMARY KEY ( dam_no ) ;

Table DAMAGE altered.

SQL> 
SQL> ALTER TABLE DAMAGE 
  2      ADD CONSTRAINT damage_uniq_id UNIQUE ( dam_datetime , rent_agreement_no ) ;

Table DAMAGE altered.

SQL> 
SQL> CREATE TABLE MAINTENANCE 
  2      ( 
  3       prop_no        NUMBER (7)  NOT NULL , 
  4       maint_datetime DATE  NOT NULL , 
  5       maint_desc     VARCHAR2 (50)  NOT NULL , 
  6       maint_cost     NUMBER (8,2)  NOT NULL 
  7      ) 
  8  ;

Table MAINTENANCE created.

SQL> 
SQL> COMMENT ON COLUMN MAINTENANCE.prop_no IS 'Property Number (Primary Key)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN MAINTENANCE.maint_datetime IS 'Maintanance Date Time' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN MAINTENANCE.maint_desc IS 'Maintance Descripton' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN MAINTENANCE.maint_cost IS 'Maintanance Cost' 
  2  ;

Comment created.

SQL> 
SQL> ALTER TABLE MAINTENANCE 
  2      ADD CONSTRAINT MAINTENANCE_PK PRIMARY KEY ( prop_no, maint_datetime ) ;

Table MAINTENANCE altered.

SQL> 
SQL> CREATE TABLE OWNER 
  2      ( 
  3       owner_no         NUMBER (7)  NOT NULL , 
  4       owner_given_name VARCHAR2 (50) , 
  5       owner_fam_nam    VARCHAR2 (50) , 
  6       owner_street     VARCHAR2 (50)  NOT NULL , 
  7       owner_city       VARCHAR2 (50)  NOT NULL , 
  8       owner_state      VARCHAR2 (50)  NOT NULL , 
  9       owner_postcode   CHAR (10)  NOT NULL 
 10      ) 
 11  ;

Table OWNER created.

SQL> 
SQL> COMMENT ON COLUMN OWNER.owner_no IS 'Owner Number (Primary Key)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN OWNER.owner_given_name IS 'Owner Given  Name' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN OWNER.owner_fam_nam IS 'Owner Family Name' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN OWNER.owner_street IS 'Owner Address - Street' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN OWNER.owner_city IS 'Owner Address - City' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN OWNER.owner_state IS 'Owner Address - State' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN OWNER.owner_postcode IS 'Owner Address - Postal Code' 
  2  ;

Comment created.

SQL> 
SQL> ALTER TABLE OWNER 
  2      ADD CONSTRAINT OWNER_PK PRIMARY KEY ( owner_no ) ;

Table OWNER altered.

SQL> 
SQL> CREATE TABLE PAYMENT 
  2      ( 
  3       pay_no            NUMBER (8)  NOT NULL , 
  4       pay_date          DATE  NOT NULL , 
  5       pay_type          CHAR (1)  NOT NULL , 
  6       pay_amount        NUMBER (8,2)  NOT NULL , 
  7       rent_agreement_no NUMBER (8)  NOT NULL , 
  8       pay_paidby        NUMBER (8)  NOT NULL 
  9      ) 
 10  ;

Table PAYMENT created.

SQL> 
SQL> ALTER TABLE PAYMENT 
  2      ADD CONSTRAINT check_pay_type 
  3      CHECK (pay_type IN ('B', 'D', 'R')) 
  4  ;

Table PAYMENT altered.

SQL> 
SQL> COMMENT ON COLUMN PAYMENT.pay_no IS 'Payment Number (Primary Key)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN PAYMENT.pay_date IS 'Payment Date' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN PAYMENT.pay_type IS 'Payment Type (CHECK Constraints: Rent, Bond, Damage)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN PAYMENT.pay_amount IS 'Payment Amount (AUD 1200.00)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN PAYMENT.rent_agreement_no IS 'Rental Agreement Number (Surrogate Key | Primary Key)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN PAYMENT.pay_paidby IS 'Payment Method ID' 
  2  ;

Comment created.

SQL> 
SQL> ALTER TABLE PAYMENT 
  2      ADD CONSTRAINT PAYMENT_PK PRIMARY KEY ( pay_no ) ;

Table PAYMENT altered.

SQL> 
SQL> CREATE TABLE PAYMETHOD 
  2      ( 
  3       paymethod_id   NUMBER (8)  NOT NULL , 
  4       paymethod_name VARCHAR2 (50)  NOT NULL 
  5      ) 
  6  ;

Table PAYMETHOD created.

SQL> 
SQL> COMMENT ON COLUMN PAYMETHOD.paymethod_id IS 'Payment Method ID' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN PAYMETHOD.paymethod_name IS 'Payment Method Name' 
  2  ;

Comment created.

SQL> 
SQL> ALTER TABLE PAYMETHOD 
  2      ADD CONSTRAINT PAYMETHOD_PK PRIMARY KEY ( paymethod_id ) ;

Table PAYMETHOD altered.

SQL> 
SQL> CREATE TABLE PROPERTY 
  2      ( 
  3       prop_no       NUMBER (7)  NOT NULL , 
  4       prop_street   VARCHAR2 (50)  NOT NULL , 
  5       prop_city     VARCHAR2 (50)  NOT NULL , 
  6       prop_state    VARCHAR2 (50)  NOT NULL , 
  7       prop_postcode VARCHAR2 (50)  NOT NULL , 
  8       prop_value    NUMBER (10)  NOT NULL , 
  9       owner_no      NUMBER (7)  NOT NULL 
 10      ) 
 11  ;

Table PROPERTY created.

SQL> 
SQL> COMMENT ON COLUMN PROPERTY.prop_no IS 'Property Number (Primary Key)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN PROPERTY.prop_street IS 'Property Address - Street' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN PROPERTY.prop_city IS 'Property Address - City' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN PROPERTY.prop_state IS 'Property Address - State' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN PROPERTY.prop_postcode IS 'Property Address - Postcode' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN PROPERTY.prop_value IS 'Property Value (Up to 1 Billion)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN PROPERTY.owner_no IS 'Owner Number (Primary Key)' 
  2  ;

Comment created.

SQL> 
SQL> ALTER TABLE PROPERTY 
  2      ADD CONSTRAINT PROPERTY_PK PRIMARY KEY ( prop_no ) ;

Table PROPERTY altered.

SQL> 
SQL> CREATE TABLE RENT 
  2      ( 
  3       rent_agreement_no    NUMBER (8)  NOT NULL , 
  4       prop_no              NUMBER (7)  NOT NULL , 
  5       rent_lease_startdate DATE  NOT NULL , 
  6       rent_weekly_rate     NUMBER (8,2)  NOT NULL , 
  7       rent_bond            NUMBER (8,2)  NOT NULL , 
  8       rent_lease_period    NUMBER (8)  NOT NULL , 
  9       tenant_no            NUMBER (8)  NOT NULL 
 10      ) 
 11  ;

Table RENT created.

SQL> 
SQL> COMMENT ON COLUMN RENT.rent_agreement_no IS 'Rental Agreement Number (Surrogate Key | Primary Key)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN RENT.prop_no IS 'Property Number (Primary Key)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN RENT.rent_lease_startdate IS 'Rent Lease Date (Primary Key)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN RENT.rent_weekly_rate IS 'Rental Weekly Rate (AUD 3000.00)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN RENT.rent_bond IS 'Rental Bond' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN RENT.rent_lease_period IS 'Rental Lease Period' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN RENT.tenant_no IS 'Tenant Number (Primary Key)' 
  2  ;

Comment created.

SQL> 
SQL> ALTER TABLE RENT 
  2      ADD CONSTRAINT RENT_PK PRIMARY KEY ( rent_agreement_no ) ;

Table RENT altered.

SQL> 
SQL> ALTER TABLE RENT 
  2      ADD CONSTRAINT rent_uniq_id UNIQUE ( prop_no , rent_lease_startdate ) ;

Table RENT altered.

SQL> 
SQL> CREATE TABLE TENANT 
  2      ( 
  3       tenant_no         NUMBER (8)  NOT NULL , 
  4       tenant_given_name VARCHAR2 (50) , 
  5       tenant_fam_name   VARCHAR2 (50) , 
  6       tenant_street     VARCHAR2 (50)  NOT NULL , 
  7       tenant_city       VARCHAR2 (50)  NOT NULL , 
  8       tenant_state      VARCHAR2 (50)  NOT NULL , 
  9       tenant_postcode   CHAR 
 10  --  WARNING: CHAR size not specified 
 11                       NOT NULL , 
 12       tenant_phone_no   CHAR (10) 
 13      ) 
 14  ;

Table TENANT created.

SQL> 
SQL> COMMENT ON COLUMN TENANT.tenant_no IS 'Tenant Number (Primary Key)' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN TENANT.tenant_given_name IS 'Tenant Given Name' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN TENANT.tenant_fam_name IS 'Tenant Family Name' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN TENANT.tenant_street IS 'Tenant Address - Street' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN TENANT.tenant_city IS 'Tenant Address - City' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN TENANT.tenant_state IS 'Tenant Address - State' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN TENANT.tenant_postcode IS 'Tenant Address - Postal Code' 
  2  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN TENANT.tenant_phone_no IS 'Tenant Phone Number' 
  2  ;

Comment created.

SQL> 
SQL> ALTER TABLE TENANT 
  2      ADD CONSTRAINT TENANT_PK PRIMARY KEY ( tenant_no ) ;

Table TENANT altered.

SQL> 
SQL> ALTER TABLE DAMAGE 
  2      ADD CONSTRAINT damage_rent_REL FOREIGN KEY 
  3      ( 
  4       rent_agreement_no
  5      ) 
  6      REFERENCES RENT 
  7      ( 
  8       rent_agreement_no
  9      ) 
 10  ;

Table DAMAGE altered.

SQL> 
SQL> ALTER TABLE PROPERTY 
  2      ADD CONSTRAINT owner_property_REL FOREIGN KEY 
  3      ( 
  4       owner_no
  5      ) 
  6      REFERENCES OWNER 
  7      ( 
  8       owner_no
  9      ) 
 10  ;

Table PROPERTY altered.

SQL> 
SQL> ALTER TABLE DAMAGE 
  2      ADD CONSTRAINT payment_damage FOREIGN KEY 
  3      ( 
  4       pay_no
  5      ) 
  6      REFERENCES PAYMENT 
  7      ( 
  8       pay_no
  9      ) 
 10  ;

Table DAMAGE altered.

SQL> 
SQL> ALTER TABLE PAYMENT 
  2      ADD CONSTRAINT payment_rent_REL FOREIGN KEY 
  3      ( 
  4       rent_agreement_no
  5      ) 
  6      REFERENCES RENT 
  7      ( 
  8       rent_agreement_no
  9      ) 
 10  ;

Table PAYMENT altered.

SQL> 
SQL> ALTER TABLE PAYMENT 
  2      ADD CONSTRAINT paymethod_payment_REL FOREIGN KEY 
  3      ( 
  4       pay_paidby
  5      ) 
  6      REFERENCES PAYMETHOD 
  7      ( 
  8       paymethod_id
  9      ) 
 10  ;

Table PAYMENT altered.

SQL> 
SQL> ALTER TABLE MAINTENANCE 
  2      ADD CONSTRAINT property_maint_REL FOREIGN KEY 
  3      ( 
  4       prop_no
  5      ) 
  6      REFERENCES PROPERTY 
  7      ( 
  8       prop_no
  9      ) 
 10  ;

Table MAINTENANCE altered.

SQL> 
SQL> ALTER TABLE RENT 
  2      ADD CONSTRAINT property_rent_REL FOREIGN KEY 
  3      ( 
  4       prop_no
  5      ) 
  6      REFERENCES PROPERTY 
  7      ( 
  8       prop_no
  9      ) 
 10  ;

Table RENT altered.

SQL> 
SQL> ALTER TABLE RENT 
  2      ADD CONSTRAINT tenant_rent_REL FOREIGN KEY 
  3      ( 
  4       tenant_no
  5      ) 
  6      REFERENCES TENANT 
  7      ( 
  8       tenant_no
  9      ) 
 10  ;

Table RENT altered.

SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                             8
SQL> -- CREATE INDEX                             1
SQL> -- ALTER TABLE                             19
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          0
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- TSDP POLICY                              0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 1
SQL> 
SQL> SPOOL off
